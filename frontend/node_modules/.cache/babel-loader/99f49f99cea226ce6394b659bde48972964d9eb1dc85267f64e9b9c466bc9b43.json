{"ast":null,"code":"var _jsxFileName = \"/Users/gregrell/git/djangoreactcrudproject/frontend/src/context/AuthContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React from \"react\";\nimport { useContext, createContext, useState } from \"react\";\nimport { jwtDecode } from \"jwt-decode\";\nimport { jwtEncode } from \"jwt-encode\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst authcontextdata = /*#__PURE__*/createContext(null);\nconst AuthContext = ({\n  children,\n  ...rest\n}) => {\n  _s();\n  let navigate = useNavigate();\n  let [user, setUser] = useState(() => localStorage.getItem(\"user\") ? jwtDecode(JSON.parse(localStorage.getItem(\"user\"))) : null);\n  let [auth, setAuth] = useState(() => JSON.parse(localStorage.getItem(\"auth\")));\n  const [loaded, setLoaded] = useState(false);\n  async function loginUser(username, password) {\n    let server2 = \"http://localhost:8000/api/token/\";\n    const user = {\n      username: username,\n      password: password\n    };\n    let response = await fetch(server2, {\n      method: \"POST\",\n      user,\n      headers: {\n        \"content-type\": \"application/json\"\n      },\n      withCredentials: true,\n      body: JSON.stringify(user)\n    });\n    const data = await response.json();\n    if (response.status !== 200) {\n      console.log(response.statusText);\n    }\n    if (response.status === 200) {\n      setAuth(data);\n      setUser(jwtDecode(data === null || data === void 0 ? void 0 : data.access));\n      localStorage.setItem(\"auth\", JSON.stringify(data));\n      localStorage.setItem(\"user\", JSON.stringify(data.access));\n      navigate(\"/\");\n    }\n  }\n  async function refreshToken() {\n    let server2 = \"http://localhost:8000/api/token/refresh/\";\n    let response = await fetch(server2, {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\"\n      },\n      withCredentials: true,\n      body: JSON.stringify(auth)\n    });\n    const data = await response.json();\n    if (response.status !== 200) {\n      logoutUser();\n    }\n    if (response.status === 200) {\n      const newtokens = {\n        refresh: auth.refresh,\n        access: data.access\n      };\n      setAuth(newtokens);\n      setUser(jwtDecode(data.access));\n      localStorage.setItem(\"auth\", JSON.stringify(newtokens));\n      localStorage.setItem(\"user\", JSON.stringify(data.access));\n    }\n    setLoaded(true);\n  }\n  function logoutUser() {\n    setAuth(null);\n    setUser(null);\n    localStorage.removeItem(\"auth\");\n    localStorage.removeItem(\"user\");\n    navigate(\"/\");\n  }\n  function isAuth() {\n    return user && user;\n  }\n  function authHeader() {\n    return `Bearer ${auth.access}`;\n  }\n\n  //Refresh token poll\n\n  React.useEffect(() => {\n    if (!loaded && user) {\n      refreshToken();\n    }\n    let interval = setInterval(() => {\n      if (user) {\n        refreshToken();\n      }\n    }, 60000);\n    return () => clearInterval(interval);\n  }, [user, loaded]);\n  let authcontextvalue = {\n    loginUser,\n    logoutUser,\n    user: user,\n    auth: auth,\n    isAuth,\n    authHeader\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(authcontextdata.Provider, {\n      value: authcontextvalue,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        ...rest,\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(AuthContext, \"nU2Rg7on6poFfAK0lHvLY5YaN8w=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthContext;\nexport default AuthContext;\nexport function useAuthContext() {\n  _s2();\n  return useContext(authcontextdata);\n}\n_s2(useAuthContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthContext\");","map":{"version":3,"names":["React","useContext","createContext","useState","jwtDecode","jwtEncode","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","authcontextdata","AuthContext","children","rest","_s","navigate","user","setUser","localStorage","getItem","JSON","parse","auth","setAuth","loaded","setLoaded","loginUser","username","password","server2","response","fetch","method","headers","withCredentials","body","stringify","data","json","status","console","log","statusText","access","setItem","refreshToken","logoutUser","newtokens","refresh","removeItem","isAuth","authHeader","useEffect","interval","setInterval","clearInterval","authcontextvalue","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuthContext","_s2","$RefreshReg$"],"sources":["/Users/gregrell/git/djangoreactcrudproject/frontend/src/context/AuthContext.jsx"],"sourcesContent":["import React from \"react\";\nimport { useContext, createContext, useState } from \"react\";\nimport { jwtDecode } from \"jwt-decode\";\nimport { jwtEncode } from \"jwt-encode\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst authcontextdata = createContext(null);\n\nconst AuthContext = ({ children, ...rest }) => {\n  let navigate = useNavigate();\n\n  let [user, setUser] = useState(() =>\n    localStorage.getItem(\"user\")\n      ? jwtDecode(JSON.parse(localStorage.getItem(\"user\")))\n      : null\n  );\n  let [auth, setAuth] = useState(() =>\n    JSON.parse(localStorage.getItem(\"auth\"))\n  );\n\n  const [loaded, setLoaded] = useState(false);\n\n  async function loginUser(username, password) {\n    let server2 = \"http://localhost:8000/api/token/\";\n\n    const user = { username: username, password: password };\n\n    let response = await fetch(server2, {\n      method: \"POST\",\n      user,\n      headers: {\n        \"content-type\": \"application/json\",\n      },\n      withCredentials: true,\n      body: JSON.stringify(user),\n    });\n\n    const data = await response.json();\n    if (response.status !== 200) {\n      console.log(response.statusText);\n    }\n    if (response.status === 200) {\n      setAuth(data);\n      setUser(jwtDecode(data?.access));\n      localStorage.setItem(\"auth\", JSON.stringify(data));\n      localStorage.setItem(\"user\", JSON.stringify(data.access));\n      navigate(\"/\");\n    }\n  }\n\n  async function refreshToken() {\n    let server2 = \"http://localhost:8000/api/token/refresh/\";\n\n    let response = await fetch(server2, {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\",\n      },\n      withCredentials: true,\n      body: JSON.stringify(auth),\n    });\n\n    const data = await response.json();\n    if (response.status !== 200) {\n      logoutUser();\n    }\n    if (response.status === 200) {\n      const newtokens = {\n        refresh: auth.refresh,\n        access: data.access,\n      };\n      setAuth(newtokens);\n      setUser(jwtDecode(data.access));\n      localStorage.setItem(\"auth\", JSON.stringify(newtokens));\n      localStorage.setItem(\"user\", JSON.stringify(data.access));\n    }\n    setLoaded(true);\n  }\n\n  function logoutUser() {\n    setAuth(null);\n    setUser(null);\n    localStorage.removeItem(\"auth\");\n    localStorage.removeItem(\"user\");\n    navigate(\"/\");\n  }\n\n  function isAuth() {\n    return user && user;\n  }\n\n  function authHeader() {\n    return `Bearer ${auth.access}`;\n  }\n\n  //Refresh token poll\n\n  React.useEffect(() => {\n    if (!loaded && user) {\n      refreshToken();\n    }\n\n    let interval = setInterval(() => {\n      if (user) {\n        refreshToken();\n      }\n    }, 60000);\n    return () => clearInterval(interval);\n  }, [user, loaded]);\n\n  let authcontextvalue = {\n    loginUser,\n    logoutUser,\n    user: user,\n    auth: auth,\n    isAuth,\n    authHeader,\n  };\n\n  return (\n    <>\n      <authcontextdata.Provider value={authcontextvalue}>\n        <div {...rest}>{children}</div>\n      </authcontextdata.Provider>\n    </>\n  );\n};\n\nexport default AuthContext;\n\nexport function useAuthContext() {\n  return useContext(authcontextdata);\n}\n"],"mappings":";;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,EAAEC,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AAC3D,SAASC,SAAS,QAAQ,YAAY;AACtC,SAASC,SAAS,QAAQ,YAAY;AACtC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE/C,MAAMC,eAAe,gBAAGT,aAAa,CAAC,IAAI,CAAC;AAE3C,MAAMU,WAAW,GAAGA,CAAC;EAAEC,QAAQ;EAAE,GAAGC;AAAK,CAAC,KAAK;EAAAC,EAAA;EAC7C,IAAIC,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAE5B,IAAI,CAACW,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAAC,MAC7BgB,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,GACxBhB,SAAS,CAACiB,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,GACnD,IACN,CAAC;EACD,IAAI,CAACG,IAAI,EAAEC,OAAO,CAAC,GAAGrB,QAAQ,CAAC,MAC7BkB,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CACzC,CAAC;EAED,MAAM,CAACK,MAAM,EAAEC,SAAS,CAAC,GAAGvB,QAAQ,CAAC,KAAK,CAAC;EAE3C,eAAewB,SAASA,CAACC,QAAQ,EAAEC,QAAQ,EAAE;IAC3C,IAAIC,OAAO,GAAG,kCAAkC;IAEhD,MAAMb,IAAI,GAAG;MAAEW,QAAQ,EAAEA,QAAQ;MAAEC,QAAQ,EAAEA;IAAS,CAAC;IAEvD,IAAIE,QAAQ,GAAG,MAAMC,KAAK,CAACF,OAAO,EAAE;MAClCG,MAAM,EAAE,MAAM;MACdhB,IAAI;MACJiB,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,eAAe,EAAE,IAAI;MACrBC,IAAI,EAAEf,IAAI,CAACgB,SAAS,CAACpB,IAAI;IAC3B,CAAC,CAAC;IAEF,MAAMqB,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;IAClC,IAAIR,QAAQ,CAACS,MAAM,KAAK,GAAG,EAAE;MAC3BC,OAAO,CAACC,GAAG,CAACX,QAAQ,CAACY,UAAU,CAAC;IAClC;IACA,IAAIZ,QAAQ,CAACS,MAAM,KAAK,GAAG,EAAE;MAC3BhB,OAAO,CAACc,IAAI,CAAC;MACbpB,OAAO,CAACd,SAAS,CAACkC,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEM,MAAM,CAAC,CAAC;MAChCzB,YAAY,CAAC0B,OAAO,CAAC,MAAM,EAAExB,IAAI,CAACgB,SAAS,CAACC,IAAI,CAAC,CAAC;MAClDnB,YAAY,CAAC0B,OAAO,CAAC,MAAM,EAAExB,IAAI,CAACgB,SAAS,CAACC,IAAI,CAACM,MAAM,CAAC,CAAC;MACzD5B,QAAQ,CAAC,GAAG,CAAC;IACf;EACF;EAEA,eAAe8B,YAAYA,CAAA,EAAG;IAC5B,IAAIhB,OAAO,GAAG,0CAA0C;IAExD,IAAIC,QAAQ,GAAG,MAAMC,KAAK,CAACF,OAAO,EAAE;MAClCG,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,eAAe,EAAE,IAAI;MACrBC,IAAI,EAAEf,IAAI,CAACgB,SAAS,CAACd,IAAI;IAC3B,CAAC,CAAC;IAEF,MAAMe,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;IAClC,IAAIR,QAAQ,CAACS,MAAM,KAAK,GAAG,EAAE;MAC3BO,UAAU,CAAC,CAAC;IACd;IACA,IAAIhB,QAAQ,CAACS,MAAM,KAAK,GAAG,EAAE;MAC3B,MAAMQ,SAAS,GAAG;QAChBC,OAAO,EAAE1B,IAAI,CAAC0B,OAAO;QACrBL,MAAM,EAAEN,IAAI,CAACM;MACf,CAAC;MACDpB,OAAO,CAACwB,SAAS,CAAC;MAClB9B,OAAO,CAACd,SAAS,CAACkC,IAAI,CAACM,MAAM,CAAC,CAAC;MAC/BzB,YAAY,CAAC0B,OAAO,CAAC,MAAM,EAAExB,IAAI,CAACgB,SAAS,CAACW,SAAS,CAAC,CAAC;MACvD7B,YAAY,CAAC0B,OAAO,CAAC,MAAM,EAAExB,IAAI,CAACgB,SAAS,CAACC,IAAI,CAACM,MAAM,CAAC,CAAC;IAC3D;IACAlB,SAAS,CAAC,IAAI,CAAC;EACjB;EAEA,SAASqB,UAAUA,CAAA,EAAG;IACpBvB,OAAO,CAAC,IAAI,CAAC;IACbN,OAAO,CAAC,IAAI,CAAC;IACbC,YAAY,CAAC+B,UAAU,CAAC,MAAM,CAAC;IAC/B/B,YAAY,CAAC+B,UAAU,CAAC,MAAM,CAAC;IAC/BlC,QAAQ,CAAC,GAAG,CAAC;EACf;EAEA,SAASmC,MAAMA,CAAA,EAAG;IAChB,OAAOlC,IAAI,IAAIA,IAAI;EACrB;EAEA,SAASmC,UAAUA,CAAA,EAAG;IACpB,OAAQ,UAAS7B,IAAI,CAACqB,MAAO,EAAC;EAChC;;EAEA;;EAEA5C,KAAK,CAACqD,SAAS,CAAC,MAAM;IACpB,IAAI,CAAC5B,MAAM,IAAIR,IAAI,EAAE;MACnB6B,YAAY,CAAC,CAAC;IAChB;IAEA,IAAIQ,QAAQ,GAAGC,WAAW,CAAC,MAAM;MAC/B,IAAItC,IAAI,EAAE;QACR6B,YAAY,CAAC,CAAC;MAChB;IACF,CAAC,EAAE,KAAK,CAAC;IACT,OAAO,MAAMU,aAAa,CAACF,QAAQ,CAAC;EACtC,CAAC,EAAE,CAACrC,IAAI,EAAEQ,MAAM,CAAC,CAAC;EAElB,IAAIgC,gBAAgB,GAAG;IACrB9B,SAAS;IACToB,UAAU;IACV9B,IAAI,EAAEA,IAAI;IACVM,IAAI,EAAEA,IAAI;IACV4B,MAAM;IACNC;EACF,CAAC;EAED,oBACE5C,OAAA,CAAAE,SAAA;IAAAG,QAAA,eACEL,OAAA,CAACG,eAAe,CAAC+C,QAAQ;MAACC,KAAK,EAAEF,gBAAiB;MAAA5C,QAAA,eAChDL,OAAA;QAAA,GAASM,IAAI;QAAAD,QAAA,EAAGA;MAAQ;QAAA+C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP;EAAC,gBAC3B,CAAC;AAEP,CAAC;AAAChD,EAAA,CAtHIH,WAAW;EAAA,QACAN,WAAW;AAAA;AAAA0D,EAAA,GADtBpD,WAAW;AAwHjB,eAAeA,WAAW;AAE1B,OAAO,SAASqD,cAAcA,CAAA,EAAG;EAAAC,GAAA;EAC/B,OAAOjE,UAAU,CAACU,eAAe,CAAC;AACpC;AAACuD,GAAA,CAFeD,cAAc;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}