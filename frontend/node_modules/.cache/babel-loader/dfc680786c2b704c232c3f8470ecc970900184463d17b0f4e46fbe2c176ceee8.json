{"ast":null,"code":"var _jsxFileName = \"/Users/gregrell/git/djangoreactcrudproject/frontend/src/pages/NotesListPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport ListItem from \"../components/ListItem\";\nimport NotePage from \"./NotePage\";\nimport { TheContext } from \"../context/MyContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NotesListPage = () => {\n  _s();\n  const [notes, setNotes] = useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    getNotes();\n  }, []);\n  let getNotes = async () => {\n    let response = await fetch(\"/api/notes/\");\n    let data = await response.json();\n    setNotes(data);\n  };\n  const handleNewNote = () => {\n    navigate(\"note/new\");\n  };\n  const somecontext = useContext(TheContext);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleNewNote,\n      children: \"New\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notes-list\",\n      children: notes.map(note => /*#__PURE__*/_jsxDEV(Link, {\n        to: `note/${note.id}`,\n        children: /*#__PURE__*/_jsxDEV(ListItem, {\n          note: note\n        }, note.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this)\n      }, note.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"note list page context \", somecontext]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(NotesListPage, \"XPGMuUuSkLB5x21Y5WXW4EgdvWE=\", false, function () {\n  return [useNavigate];\n});\n_c = NotesListPage;\nexport default NotesListPage;\nvar _c;\n$RefreshReg$(_c, \"NotesListPage\");","map":{"version":3,"names":["React","useState","useEffect","useContext","Link","useNavigate","ListItem","NotePage","TheContext","jsxDEV","_jsxDEV","NotesListPage","_s","notes","setNotes","navigate","getNotes","response","fetch","data","json","handleNewNote","somecontext","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","className","map","note","to","id","_c","$RefreshReg$"],"sources":["/Users/gregrell/git/djangoreactcrudproject/frontend/src/pages/NotesListPage.jsx"],"sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\n\nimport ListItem from \"../components/ListItem\";\nimport NotePage from \"./NotePage\";\nimport { TheContext } from \"../context/MyContext\";\n\nconst NotesListPage = () => {\n  const [notes, setNotes] = useState([]);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    getNotes();\n  }, []);\n\n  let getNotes = async () => {\n    let response = await fetch(\"/api/notes/\");\n    let data = await response.json();\n    setNotes(data);\n  };\n\n  const handleNewNote = () => {\n    navigate(\"note/new\");\n  };\n\n  const somecontext = useContext(TheContext);\n  return (\n    <div>\n      <button onClick={handleNewNote}>New</button>\n      <div className=\"notes-list\">\n        {notes.map((note) => (\n          <Link to={`note/${note.id}`} key={note.id}>\n            <ListItem note={note} key={note.id} />\n          </Link>\n        ))}\n      </div>\n      <p>note list page context {somecontext}</p>\n    </div>\n  );\n};\n\nexport default NotesListPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAC9D,SAASC,IAAI,EAAEC,WAAW,QAAQ,kBAAkB;AAEpD,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,QAAQ,MAAM,YAAY;AACjC,SAASC,UAAU,QAAQ,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMc,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAE9BH,SAAS,CAAC,MAAM;IACdc,QAAQ,CAAC,CAAC;EACZ,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIA,QAAQ,GAAG,MAAAA,CAAA,KAAY;IACzB,IAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAC,aAAa,CAAC;IACzC,IAAIC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAChCN,QAAQ,CAACK,IAAI,CAAC;EAChB,CAAC;EAED,MAAME,aAAa,GAAGA,CAAA,KAAM;IAC1BN,QAAQ,CAAC,UAAU,CAAC;EACtB,CAAC;EAED,MAAMO,WAAW,GAAGnB,UAAU,CAACK,UAAU,CAAC;EAC1C,oBACEE,OAAA;IAAAa,QAAA,gBACEb,OAAA;MAAQc,OAAO,EAAEH,aAAc;MAAAE,QAAA,EAAC;IAAG;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC5ClB,OAAA;MAAKmB,SAAS,EAAC,YAAY;MAAAN,QAAA,EACxBV,KAAK,CAACiB,GAAG,CAAEC,IAAI,iBACdrB,OAAA,CAACN,IAAI;QAAC4B,EAAE,EAAG,QAAOD,IAAI,CAACE,EAAG,EAAE;QAAAV,QAAA,eAC1Bb,OAAA,CAACJ,QAAQ;UAACyB,IAAI,EAAEA;QAAK,GAAMA,IAAI,CAACE,EAAE;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MAAC,GADNG,IAAI,CAACE,EAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEnC,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNlB,OAAA;MAAAa,QAAA,GAAG,yBAAuB,EAACD,WAAW;IAAA;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxC,CAAC;AAEV,CAAC;AAAChB,EAAA,CAhCID,aAAa;EAAA,QAEAN,WAAW;AAAA;AAAA6B,EAAA,GAFxBvB,aAAa;AAkCnB,eAAeA,aAAa;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}